# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input EducationListRelationFilter {
  every: EducationWhereInput
  none: EducationWhereInput
  some: EducationWhereInput
}

input EducationOrderByRelationAggregateInput {
  _count: SortOrder
}

input EducationWhereInput {
  AND: [EducationWhereInput!]
  NOT: [EducationWhereInput!]
  OR: [EducationWhereInput!]
  Profile: ProfileRelationFilter
  createdAt: DateTimeFilter
  degree: StringFilter
  endDate: DateTimeFilter
  field: StringFilter
  id: IntFilter
  minors: StringNullableFilter
  profileId: IntFilter
  school: StringFilter
  startDate: DateTimeFilter
  updatedAt: DateTimeFilter
}

input ExperienceListRelationFilter {
  every: ExperienceWhereInput
  none: ExperienceWhereInput
  some: ExperienceWhereInput
}

input ExperienceOrderByRelationAggregateInput {
  _count: SortOrder
}

input ExperienceRelationFilter {
  is: ExperienceWhereInput
  isNot: ExperienceWhereInput
}

input ExperienceWhereInput {
  AND: [ExperienceWhereInput!]
  NOT: [ExperienceWhereInput!]
  OR: [ExperienceWhereInput!]
  Profile: ProfileRelationFilter
  SkillsOnExperiences: SkillsOnExperiencesListRelationFilter
  company: StringFilter
  createdAt: DateTimeFilter
  endDate: DateTimeNullableFilter
  id: IntFilter
  location: StringFilter
  profileId: IntFilter
  remote: BoolFilter
  startDate: DateTimeFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input LinksListRelationFilter {
  every: LinksWhereInput
  none: LinksWhereInput
  some: LinksWhereInput
}

input LinksOrderByRelationAggregateInput {
  _count: SortOrder
}

input LinksWhereInput {
  AND: [LinksWhereInput!]
  NOT: [LinksWhereInput!]
  OR: [LinksWhereInput!]
  Profile: ProfileRelationFilter
  createdAt: DateTimeFilter
  id: IntFilter
  profileId: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  url: StringFilter
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Profile {
  _count: ProfileCount
  bio: String
  createdAt: DateTime!
  email: String!
  id: Int!
  name: String!
  photoURL: String
  tagline: String
  updatedAt: DateTime!
}

type ProfileCount {
  Education: Int!
  Experience: Int!
  Links: Int!
  Skills: Int!
}

input ProfileOrderByWithRelationInput {
  Education: EducationOrderByRelationAggregateInput
  Experience: ExperienceOrderByRelationAggregateInput
  Links: LinksOrderByRelationAggregateInput
  Skills: SkillsOrderByRelationAggregateInput
  bio: SortOrder
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  photoURL: SortOrder
  tagline: SortOrder
  updatedAt: SortOrder
}

input ProfileRelationFilter {
  is: ProfileWhereInput
  isNot: ProfileWhereInput
}

enum ProfileScalarFieldEnum {
  bio
  createdAt
  email
  id
  name
  photoURL
  tagline
  updatedAt
}

input ProfileWhereInput {
  AND: [ProfileWhereInput!]
  Education: EducationListRelationFilter
  Experience: ExperienceListRelationFilter
  Links: LinksListRelationFilter
  NOT: [ProfileWhereInput!]
  OR: [ProfileWhereInput!]
  Skills: SkillsListRelationFilter
  bio: StringNullableFilter
  createdAt: DateTimeFilter
  email: StringFilter
  id: IntFilter
  name: StringFilter
  photoURL: StringNullableFilter
  tagline: StringNullableFilter
  updatedAt: DateTimeFilter
}

input ProfileWhereUniqueInput {
  email: String
  id: Int
}

type Query {
  findFirstProfile(cursor: ProfileWhereUniqueInput, distinct: [ProfileScalarFieldEnum!], orderBy: [ProfileOrderByWithRelationInput!], skip: Int, take: Int, where: ProfileWhereInput): Profile
  profiles(cursor: ProfileWhereUniqueInput, distinct: [ProfileScalarFieldEnum!], orderBy: [ProfileOrderByWithRelationInput!], skip: Int, take: Int, where: ProfileWhereInput): [Profile!]!
}

input SkillsListRelationFilter {
  every: SkillsWhereInput
  none: SkillsWhereInput
  some: SkillsWhereInput
}

input SkillsOnExperiencesListRelationFilter {
  every: SkillsOnExperiencesWhereInput
  none: SkillsOnExperiencesWhereInput
  some: SkillsOnExperiencesWhereInput
}

input SkillsOnExperiencesWhereInput {
  AND: [SkillsOnExperiencesWhereInput!]
  NOT: [SkillsOnExperiencesWhereInput!]
  OR: [SkillsOnExperiencesWhereInput!]
  experience: ExperienceRelationFilter
  experienceId: IntFilter
  skill: SkillsRelationFilter
  skillId: IntFilter
}

input SkillsOrderByRelationAggregateInput {
  _count: SortOrder
}

input SkillsRelationFilter {
  is: SkillsWhereInput
  isNot: SkillsWhereInput
}

input SkillsWhereInput {
  AND: [SkillsWhereInput!]
  NOT: [SkillsWhereInput!]
  OR: [SkillsWhereInput!]
  Profile: ProfileRelationFilter
  SkillsOnExperiences: SkillsOnExperiencesListRelationFilter
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  profileId: IntFilter
  updatedAt: DateTimeFilter
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}
